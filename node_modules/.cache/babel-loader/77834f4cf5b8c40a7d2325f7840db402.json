{"ast":null,"code":"var _jsxFileName = \"/Users/kncr/Desktop/react_exercises/react_blog_app/meine-version/src/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport { api } from '../api';\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = props => {\n  _s();\n\n  const [post, setPost] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const onInputChange = e => {\n    setPost({ ...post,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleFormSubmit = e => {\n    var _props$post;\n\n    e.preventDefault();\n    setErrorMessage(\"\");\n\n    if ((_props$post = props.post) === null || _props$post === void 0 ? void 0 : _props$post.title) {\n      //Edit Form\n      api().put(`/posts/${props.match.params.id}`, post).then(response => {\n        console.log(response);\n        props.history.push(`/posts/${props.match.params.id}`);\n      }).catch(error => {\n        setErrorMessage(\" You must fill both fields!\");\n      });\n    } else {\n      // Add Form\n      api().post('/posts', post).then(response => {\n        props.history.push('/');\n      }).catch(error => {\n        setErrorMessage(\" You must fill both fields!\");\n      });\n    }\n  };\n\n  useEffect(() => {\n    var _props$post2, _props$post3;\n\n    if (((_props$post2 = props.post) === null || _props$post2 === void 0 ? void 0 : _props$post2.title) && ((_props$post3 = props.post) === null || _props$post3 === void 0 ? void 0 : _props$post3.content)) {\n      setPost({\n        title: props.post.title,\n        content: props.post.content\n      });\n    }\n  }, [props.post]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui error message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Error Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Post Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: post.title,\n          name: \"title\",\n          type: \"text\",\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Post Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: post.content,\n          name: \"content\",\n          rows: \"3\",\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFormSubmit,\n        className: \"ui primary button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostForm, \"QsEi87BvuGxIyLEe8c+MfwFGNI4=\");\n\n_c = PostForm;\nexport default _c2 = withRouter(PostForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/kncr/Desktop/react_exercises/react_blog_app/meine-version/src/components/PostForm.js"],"names":["api","React","useEffect","useState","withRouter","PostForm","props","post","setPost","title","content","errorMessage","setErrorMessage","onInputChange","e","target","name","value","handleFormSubmit","preventDefault","put","match","params","id","then","response","console","log","history","push","catch","error"],"mappings":"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","sourcesContent":["import {api} from '../api';\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\n\n\nconst PostForm = (props) => {\n\n    const [post, setPost] = useState({ title: \"\", content: \"\" });\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const onInputChange = (e) => {\n        setPost({ ...post, [e.target.name]: e.target.value })\n    }\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        setErrorMessage(\"\");\n\n        if(props.post?.title){\n            //Edit Form\n            api()\n            .put(`/posts/${props.match.params.id}`,post)\n            .then(response=>{\n                console.log(response);\n                props.history.push(`/posts/${props.match.params.id}`);\n            })\n            .catch(\n                (error) => {\n                    setErrorMessage(\" You must fill both fields!\");\n                }\n            );\n        }else{\n            // Add Form\n            api()\n            .post('/posts', post)\n            .then(response => {\n                props.history.push('/');\n            }).catch((error) => {\n                setErrorMessage(\" You must fill both fields!\");\n            })\n        }\n\n\n      \n\n\n    }\n\n    useEffect(()=>{\n        if(props.post?.title && props.post?.content){\n            setPost({title:props.post.title, content:props.post.content})\n        }\n        \n    },[props.post])\n\n    return (\n        <React.Fragment>\n            {errorMessage && \n            <div className=\"ui error message\">\n                <div className=\"header\">Error Message</div>\n                <p>\n                    {errorMessage}\n                </p>\n            </div>\n            }\n            \n            <div className=\"ui form\">\n                <div className=\"field\">\n                    <label>Post Title</label>\n                    <input\n                        value={post.title}\n                        name='title'\n                        type=\"text\"\n                        onChange={onInputChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label>Post Content</label>\n                    <textarea\n                        value={post.content}\n                        name='content'\n                        rows=\"3\"\n                        onChange={onInputChange}\n                    ></textarea>\n                </div>\n                <button onClick={handleFormSubmit} className=\"ui primary button\">\n                    Send\n            </button>\n                <button className=\"ui button\">\n                    Cancel\n            </button>\n            </div>\n\n        </React.Fragment>\n\n    );\n};\n\nexport default withRouter(PostForm);"]},"metadata":{},"sourceType":"module"}